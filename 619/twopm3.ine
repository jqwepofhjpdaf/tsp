* cdd+: Double Description Method in C++:Version 0.77(August 19, 2003)
* Copyright (C) 1999, Komei Fukuda, fukuda@ifor.math.ethz.ch
* Compiled for Rational Exact Arithmetic with GMP
*Input File:twopm3.ext(70x10)
*HyperplaneOrder: LexMin
*Degeneracy preknowledge for computation: None (possible degeneracy)
*Hull computation is chosen.
*Output adjacency file is requested.
*Computation starts     at Wed Jun 19 17:59:45 2019
*            terminates at Wed Jun 19 17:59:45 2019
*Total processor time = 0 seconds
*                     = 0h 0m 0s
*Since hull computation is chosen, the output is a minimal inequality system
*FINAL RESULT:
*Number of Facets = 90
H-representation
begin
90  10  rational
 2 0 -1 0 0 -1 0 -1 0 -1
 1 0 0 0 0 0 0 0 0 -1
 0 0 0 0 0 0 1 0 0 0
 3 -1 -1 -1 0 0 0 -1 -1 -1
 2 -1 -1 0 0 -1 1 0 1 0
 2 -1 -1 0 0 1 1 0 -1 0
 2 -1 -1 0 1 0 1 0 0 -1
 6 -2 -1 -1 -1 0 -1 -1 -2 -2
 6 -2 -1 -1 -1 -1 0 -2 -1 -2
 6 -1 -1 0 -2 -1 -1 -2 -1 -2
 2 0 -1 1 -1 0 1 -1 0 0
 1 0 0 0 0 0 0 0 -1 0
 6 -1 -2 -1 0 -1 -1 -1 -2 -2
 2 -1 0 1 0 -1 1 -1 0 0
 6 -1 -1 0 -1 -2 -1 -2 -2 -1
 6 -1 -2 -1 -1 -1 0 -2 -2 -1
 2 0 0 -1 0 0 -1 0 -1 -1
 2 -1 1 0 0 1 -1 0 -1 0
 -2 0 1 1 1 2 1 1 0 2
 2 0 -1 -1 1 1 0 0 -1 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 -1 0 0 0 0 0 0
 2 0 1 -1 -1 0 -1 1 0 0
 -2 1 1 0 1 0 1 2 2 1
 -2 1 1 0 0 1 1 2 1 2
 2 1 0 -1 0 -1 -1 1 0 0
 6 -1 0 -1 -1 -1 -2 -2 -2 -1
 6 -1 -1 -2 -1 0 -1 -2 -2 -1
 2 0 1 1 -1 0 -1 -1 0 0
 2 1 1 0 -1 0 -1 0 0 -1
 -2 1 1 2 1 0 1 0 2 1
 2 1 0 1 0 -1 -1 -1 0 0
 -2 1 2 1 0 1 1 1 0 2
 6 0 -1 -1 -1 -1 -2 -2 -1 -2
 -2 2 1 1 1 1 0 2 1 0
 0 1 0 0 0 0 0 0 0 0
 -2 1 1 0 1 2 1 2 0 1
 -2 1 0 1 1 1 2 0 2 1
 -2 1 1 2 0 1 1 0 1 2
 -2 2 1 1 1 0 1 1 2 0
 6 0 -1 -1 -1 -2 -1 -1 -2 -2
 2 1 1 0 0 -1 -1 0 -1 0
 -2 1 2 1 1 1 0 2 0 1
 -3 1 1 1 1 1 1 1 1 1
 2 1 0 1 -1 -1 0 0 0 -1
 2 0 1 1 -1 -1 0 0 -1 0
 3 0 0 0 -1 -1 -1 -1 -1 -1
 2 1 0 -1 1 -1 0 0 0 -1
 -2 1 1 0 2 1 1 2 1 0
 2 0 -1 -1 1 0 1 -1 0 0
 -2 0 1 1 1 1 2 0 1 2
 6 -1 -1 -2 0 -1 -1 -2 -1 -2
 2 0 1 -1 -1 1 0 0 -1 0
 6 -1 0 -1 -2 -1 -1 -1 -2 -2
 2 -1 0 -1 0 1 1 -1 0 0
 2 1 -1 0 1 0 -1 0 0 -1
 -2 1 0 1 2 1 1 1 2 0
 2 -1 0 -1 1 1 0 0 0 -1
 1 0 0 0 0 0 0 -1 0 0
 2 1 -1 0 0 -1 -1 0 1 0
 2 0 -1 -1 1 -1 0 0 1 0
 -2 0 1 1 1 0 1 1 2 2
 2 0 -1 -1 1 0 -1 1 0 0
 -1 1 0 0 1 0 0 1 1 0
 1 0 0 0 0 -1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 -2 1 0 1 0 1 1 1 2 2
 2 -1 1 0 -1 0 -1 0 0 1
 2 -1 0 -1 -1 1 0 0 0 1
 2 -1 0 -1 0 1 -1 1 0 0
 -2 0 1 1 1 1 0 2 1 2
 -2 1 0 1 1 1 0 2 2 1
 2 -1 0 1 -1 -1 0 0 0 1
 2 0 -1 1 -1 -1 0 0 1 0
 2 -1 -1 0 -1 0 1 0 0 1
 0 0 0 0 0 0 0 0 0 1
 -2 1 1 1 0 0 0 1 1 1
 1 0 0 0 0 0 -1 0 0 0
 -1 0 1 0 0 1 0 1 0 1
 2 -1 0 0 -1 0 0 -1 -1 0
 1 0 0 0 -1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 1 0 0
 -1 0 0 1 0 0 1 0 1 1
 1 0 -1 0 0 0 0 0 0 0
 1 -1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 -2 0 0 0 1 1 1 1 1 1
 4 -1 -1 -1 -1 -1 -1 -1 -1 -1
end
adjacency